%!PS-Adobe-3.0
%%BoundingBox: 38 24 574 768
%%Title: Enscript Output
%%For: 한석현
%%Creator: GNU enscript 1.6.4
%%CreationDate: Sun Apr 20 23:17:43 2014
%%Orientation: Landscape
%%Pages: (atend)
%%DocumentMedia: Letter 612 792 0 () ()
%%DocumentNeededResources: (atend)
%%EndComments
%%BeginProlog
%%BeginResource: procset Enscript-Prolog 1.6 4
%
% Procedures.
%

/_S {	% save current state
  /_s save def
} def
/_R {	% restore from saved state
  _s restore
} def

/S {	% showpage protecting gstate
  gsave
  showpage
  grestore
} bind def

/MF {	% fontname newfontname -> -	make a new encoded font
  /newfontname exch def
  /fontname exch def

  /fontdict fontname findfont def
  /newfont fontdict maxlength dict def

  fontdict {
    exch
    dup /FID eq {
      % skip FID pair
      pop pop
    } {
      % copy to the new font dictionary
      exch newfont 3 1 roll put
    } ifelse
  } forall

  newfont /FontName newfontname put

  % insert only valid encoding vectors
  encoding_vector length 256 eq {
    newfont /Encoding encoding_vector put
  } if

  newfontname newfont definefont pop
} def

/MF_PS { % fontname newfontname -> -	make a new font preserving its enc
  /newfontname exch def
  /fontname exch def

  /fontdict fontname findfont def
  /newfont fontdict maxlength dict def

  fontdict {
    exch
    dup /FID eq {
      % skip FID pair
      pop pop
    } {
      % copy to the new font dictionary
      exch newfont 3 1 roll put
    } ifelse
  } forall

  newfont /FontName newfontname put

  newfontname newfont definefont pop
} def

/SF { % fontname width height -> -	set a new font
  /height exch def
  /width exch def

  findfont
  [width 0 0 height 0 0] makefont setfont
} def

/SUF { % fontname width height -> -	set a new user font
  /height exch def
  /width exch def

  /F-gs-user-font MF
  /F-gs-user-font width height SF
} def

/SUF_PS { % fontname width height -> -	set a new user font preserving its enc
  /height exch def
  /width exch def

  /F-gs-user-font MF_PS
  /F-gs-user-font width height SF
} def

/M {moveto} bind def
/s {show} bind def

/Box {	% x y w h -> -			define box path
  /d_h exch def /d_w exch def /d_y exch def /d_x exch def
  d_x d_y  moveto
  d_w 0 rlineto
  0 d_h rlineto
  d_w neg 0 rlineto
  closepath
} def

/bgs {	% x y height blskip gray str -> -	show string with bg color
  /str exch def
  /gray exch def
  /blskip exch def
  /height exch def
  /y exch def
  /x exch def

  gsave
    x y blskip sub str stringwidth pop height Box
    gray setgray
    fill
  grestore
  x y M str s
} def

/bgcs { % x y height blskip red green blue str -> -  show string with bg color
  /str exch def
  /blue exch def
  /green exch def
  /red exch def
  /blskip exch def
  /height exch def
  /y exch def
  /x exch def

  gsave
    x y blskip sub str stringwidth pop height Box
    red green blue setrgbcolor
    fill
  grestore
  x y M str s
} def

% Highlight bars.
/highlight_bars {	% nlines lineheight output_y_margin gray -> -
  gsave
    setgray
    /ymarg exch def
    /lineheight exch def
    /nlines exch def

    % This 2 is just a magic number to sync highlight lines to text.
    0 d_header_y ymarg sub 2 sub translate

    /cw d_output_w cols div def
    /nrows d_output_h ymarg 2 mul sub lineheight div cvi def

    % for each column
    0 1 cols 1 sub {
      cw mul /xp exch def

      % for each rows
      0 1 nrows 1 sub {
        /rn exch def
        rn lineheight mul neg /yp exch def
        rn nlines idiv 2 mod 0 eq {
	  % Draw highlight bar.  4 is just a magic indentation.
	  xp 4 add yp cw 8 sub lineheight neg Box fill
	} if
      } for
    } for

  grestore
} def

% Line highlight bar.
/line_highlight {	% x y width height gray -> -
  gsave
    /gray exch def
    Box gray setgray fill
  grestore
} def

% Column separator lines.
/column_lines {
  gsave
    .1 setlinewidth
    0 d_footer_h translate
    /cw d_output_w cols div def
    1 1 cols 1 sub {
      cw mul 0 moveto
      0 d_output_h rlineto stroke
    } for
  grestore
} def

% Column borders.
/column_borders {
  gsave
    .1 setlinewidth
    0 d_footer_h moveto
    0 d_output_h rlineto
    d_output_w 0 rlineto
    0 d_output_h neg rlineto
    closepath stroke
  grestore
} def

% Do the actual underlay drawing
/draw_underlay {
  ul_style 0 eq {
    ul_str true charpath stroke
  } {
    ul_str show
  } ifelse
} def

% Underlay
/underlay {	% - -> -
  gsave
    0 d_page_h translate
    d_page_h neg d_page_w atan rotate

    ul_gray setgray
    ul_font setfont
    /dw d_page_h dup mul d_page_w dup mul add sqrt def
    ul_str stringwidth pop dw exch sub 2 div ul_h_ptsize -2 div moveto
    draw_underlay
  grestore
} def

/user_underlay {	% - -> -
  gsave
    ul_x ul_y translate
    ul_angle rotate
    ul_gray setgray
    ul_font setfont
    0 0 ul_h_ptsize 2 div sub moveto
    draw_underlay
  grestore
} def

% Page prefeed
/page_prefeed {		% bool -> -
  statusdict /prefeed known {
    statusdict exch /prefeed exch put
  } {
    pop
  } ifelse
} def

% Wrapped line markers
/wrapped_line_mark {	% x y charwith charheight type -> -
  /type exch def
  /h exch def
  /w exch def
  /y exch def
  /x exch def

  type 2 eq {
    % Black boxes (like TeX does)
    gsave
      0 setlinewidth
      x w 4 div add y M
      0 h rlineto w 2 div 0 rlineto 0 h neg rlineto
      closepath fill
    grestore
  } {
    type 3 eq {
      % Small arrows
      gsave
        .2 setlinewidth
        x w 2 div add y h 2 div add M
        w 4 div 0 rlineto
        x w 4 div add y lineto stroke

        x w 4 div add w 8 div add y h 4 div add M
        x w 4 div add y lineto
	w 4 div h 8 div rlineto stroke
      grestore
    } {
      % do nothing
    } ifelse
  } ifelse
} def

% EPSF import.

/BeginEPSF {
  /b4_Inc_state save def    		% Save state for cleanup
  /dict_count countdictstack def	% Count objects on dict stack
  /op_count count 1 sub def		% Count objects on operand stack
  userdict begin
  /showpage { } def
  0 setgray 0 setlinecap
  1 setlinewidth 0 setlinejoin
  10 setmiterlimit [ ] 0 setdash newpath
  /languagelevel where {
    pop languagelevel
    1 ne {
      false setstrokeadjust false setoverprint
    } if
  } if
} bind def

/EndEPSF {
  count op_count sub { pos } repeat	% Clean up stacks
  countdictstack dict_count sub { end } repeat
  b4_Inc_state restore
} bind def

% Check PostScript language level.
/languagelevel where {
  pop /gs_languagelevel languagelevel def
} {
  /gs_languagelevel 1 def
} ifelse
%%EndResource
%%BeginResource: procset Enscript-Encoding-88591 1.6 4
/encoding_vector [
/.notdef      	/.notdef      	/.notdef      	/.notdef      	
/.notdef      	/.notdef      	/.notdef      	/.notdef      	
/.notdef      	/.notdef      	/.notdef      	/.notdef      	
/.notdef      	/.notdef      	/.notdef      	/.notdef      	
/.notdef      	/.notdef      	/.notdef      	/.notdef      	
/.notdef      	/.notdef      	/.notdef      	/.notdef      	
/.notdef      	/.notdef      	/.notdef      	/.notdef      	
/.notdef      	/.notdef      	/.notdef      	/.notdef      	
/space        	/exclam       	/quotedbl     	/numbersign   	
/dollar       	/percent      	/ampersand    	/quoteright   	
/parenleft    	/parenright   	/asterisk     	/plus         	
/comma        	/hyphen       	/period       	/slash        	
/zero         	/one          	/two          	/three        	
/four         	/five         	/six          	/seven        	
/eight        	/nine         	/colon        	/semicolon    	
/less         	/equal        	/greater      	/question     	
/at           	/A            	/B            	/C            	
/D            	/E            	/F            	/G            	
/H            	/I            	/J            	/K            	
/L            	/M            	/N            	/O            	
/P            	/Q            	/R            	/S            	
/T            	/U            	/V            	/W            	
/X            	/Y            	/Z            	/bracketleft  	
/backslash    	/bracketright 	/asciicircum  	/underscore   	
/quoteleft    	/a            	/b            	/c            	
/d            	/e            	/f            	/g            	
/h            	/i            	/j            	/k            	
/l            	/m            	/n            	/o            	
/p            	/q            	/r            	/s            	
/t            	/u            	/v            	/w            	
/x            	/y            	/z            	/braceleft    	
/bar          	/braceright   	/tilde        	/.notdef      	
/.notdef      	/.notdef      	/.notdef      	/.notdef      	
/.notdef      	/.notdef      	/.notdef      	/.notdef      	
/.notdef      	/.notdef      	/.notdef      	/.notdef      	
/.notdef      	/.notdef      	/.notdef      	/.notdef      	
/.notdef      	/.notdef      	/.notdef      	/.notdef      	
/.notdef      	/.notdef      	/.notdef      	/.notdef      	
/.notdef      	/.notdef      	/.notdef      	/.notdef      	
/.notdef      	/.notdef      	/.notdef      	/.notdef      	
/space        	/exclamdown   	/cent         	/sterling     	
/currency     	/yen          	/brokenbar    	/section      	
/dieresis     	/copyright    	/ordfeminine  	/guillemotleft	
/logicalnot   	/hyphen       	/registered   	/macron       	
/degree       	/plusminus    	/twosuperior  	/threesuperior	
/acute        	/mu           	/paragraph    	/bullet       	
/cedilla      	/onesuperior  	/ordmasculine 	/guillemotright	
/onequarter   	/onehalf      	/threequarters	/questiondown 	
/Agrave       	/Aacute       	/Acircumflex  	/Atilde       	
/Adieresis    	/Aring        	/AE           	/Ccedilla     	
/Egrave       	/Eacute       	/Ecircumflex  	/Edieresis    	
/Igrave       	/Iacute       	/Icircumflex  	/Idieresis    	
/Eth          	/Ntilde       	/Ograve       	/Oacute       	
/Ocircumflex  	/Otilde       	/Odieresis    	/multiply     	
/Oslash       	/Ugrave       	/Uacute       	/Ucircumflex  	
/Udieresis    	/Yacute       	/Thorn        	/germandbls   	
/agrave       	/aacute       	/acircumflex  	/atilde       	
/adieresis    	/aring        	/ae           	/ccedilla     	
/egrave       	/eacute       	/ecircumflex  	/edieresis    	
/igrave       	/iacute       	/icircumflex  	/idieresis    	
/eth          	/ntilde       	/ograve       	/oacute       	
/ocircumflex  	/otilde       	/odieresis    	/divide       	
/oslash       	/ugrave       	/uacute       	/ucircumflex  	
/udieresis    	/yacute       	/thorn        	/ydieresis    	
] def
%%EndResource
%%EndProlog
%%BeginSetup
%%IncludeResource: font Courier-Bold
%%IncludeResource: font Courier
/HFpt_w 10 def
/HFpt_h 10 def
/Courier-Bold /HF-gs-font MF
/HF /HF-gs-font findfont [HFpt_w 0 0 HFpt_h 0 0] makefont def
/Courier /F-gs-font MF
/F-gs-font 7 7 SF
/#copies 1 def
% Pagedevice definitions:
gs_languagelevel 1 gt {
  <<
    /PageSize [612 792] 
  >> setpagedevice
} if
%%BeginResource: procset Enscript-Header-enscript 1.6 4
%%IncludeResource: font Times-Bold
%%IncludeResource: font Times-Roman

% Fonts.
/Times-Bold /HeaderFont-Bold MF
/HeaderDateF /HeaderFont-Bold findfont 12 scalefont def

/Times-Roman /HeaderFont-Times MF
/HeaderHDRF /HeaderFont-Times findfont 14 scalefont def

/HeaderPageNumF /Helvetica-Bold findfont 28.8 scalefont def

/do_header {	% print enscript header
  gsave
    d_header_x d_header_y translate

    % light bar
    0 0 d_header_w d_header_h 2 div Box
    .95 setgray fill

    % dark gray boxes
    /dbw d_header_h 2 mul def	% dark box width
    /dbc .7 def			% dark box color

    % left dark box.
    0 0 dbw d_header_h Box
    dbc setgray fill

    0 setgray 
    HeaderDateF setfont
    moddatestr dup stringwidth pop dbw exch sub 2 div 
    d_header_h 2 div 2 add moveto show
    modtimestr dup stringwidth pop dbw exch sub 2 div 
    d_header_h 5 div moveto show

    % right dark box
    d_header_w dbw sub 0 dbw d_header_h Box
    dbc setgray fill

    HeaderPageNumF setfont
    1 setgray
    pagenumstr dup
    stringwidth pop dbw exch sub 2 div d_header_w dbw sub add
    d_header_h .2 mul moveto show

    % filename
    0 setgray 
    HeaderHDRF setfont
    d_header_w fname stringwidth pop sub 2 div d_header_h 8 div moveto
    fname show

    % user supplied header string.
    user_header_p {
      /h d_header_h 8 div 5 mul def

      % Implement strict enscript compatibility.
      user_header_center_str () eq user_header_right_str () eq and {
        d_header_w user_header_left_str stringwidth pop sub 2 div 
        h moveto user_header_left_str show
      } {
        dbw 5 add h moveto user_header_left_str show

        d_header_w user_header_center_str stringwidth pop sub 2 div 
        h moveto user_header_center_str show

	d_header_w dbw sub 5 sub user_header_right_str stringwidth pop
	sub h moveto user_header_right_str show
      } ifelse
    } if

  grestore
} def
%%EndResource
/d_page_w 744 def
/d_page_h 536 def
/d_header_x 0 def
/d_header_y 500 def
/d_header_w 744 def
/d_header_h 36 def
/d_footer_x 0 def
/d_footer_y 0 def
/d_footer_w 744 def
/d_footer_h 0 def
/d_output_w 744 def
/d_output_h 500 def
/cols 2 def
%%EndSetup
%%Page: (1) 1
%%BeginPageSetup
_S
90 rotate
24 -574 translate
/pagenum 1 def
/fname (./PL/hw6/no1/no1.cpp) def
/fdir (./PL/hw6/no1/) def
/ftail (no1.cpp) def
% User defined strings:
/pagenumstr (1) def
/moddatestr (04/20/14) def
/modtimestr (23:17:41) def
/user_header_p false def
/user_footer_p false def
%%EndPageSetup
column_lines
do_header
5 490 M
(#include <iostream>) s
5 482 M
(#include <string.h>) s
5 474 M
(#include <stdio.h>) s
5 466 M
(#include <stdlib.h>) s
5 450 M
(using namespace std;) s
5 434 M
(class Replace) s
5 426 M
({) s
5 418 M
(  public:) s
5 410 M
(    char *result, *str, *string;       //vairable declare) s
5 402 M
(    int count, len, start, i, j;) s
5 394 M
(    char* putString\(\);                 //funtion declare) s
5 386 M
(    void getString\(char *s\);) s
5 378 M
(    ) s
5 362 M
(};) s
5 346 M
(void Replace::getString\(char *s\)       //mem-funtion initialization) s
5 338 M
({) s
5 330 M
(  string = s;) s
5 322 M
(  count = 0;) s
5 314 M
(  start = 0;) s
5 306 M
(  len = strlen\(string\);) s
5 298 M
(  result = new char\(len\);) s
5 290 M
(  str = result;) s
5 274 M
(}) s
5 250 M
(char* Replace::putString\(\)) s
5 242 M
({) s
5 226 M
(  for\(i =0; string[i] != '\\0'; i++\){   //loop until end of stirng) s
5 218 M
(    if\(string[i] != string[i+1]\){      //i-th and i+1th are different) s
5 202 M
(     if\(count < 2\){                    //if counter less than 2) s
5 194 M
(      for\(j = start; j <= i; j++\){     //assignment j to start location , until i) s
5 186 M
(       *str = string[j];               //input string from s) s
5 178 M
(        str++;                         //stirng pointer +1) s
5 170 M
(      }) s
5 162 M
(      start = i+1;                     //reallocation start location ) s
5 154 M
(      count = 0;                       //initialization counter) s
5 146 M
(     }) s
5 138 M
(     else{                             //when counter grater tane 2) s
5 130 M
(      *str = 48;                       //input '0' to stirng) s
5 122 M
(      str++;                           //string pointer +1) s
5 114 M
(      count = 0;                       //initialization counter) s
5 106 M
(      start = i+1;                     //reallocatin start location) s
5 98 M
(     }) s
5 90 M
(    }) s
5 74 M
(   else{                               //ith and i+1th are the same) s
5 66 M
(     count++;) s
5 58 M
(    }) s
5 50 M
(  }) s
5 34 M
(  *str = '\\0';                         //input '\\0' to string) s
5 18 M
(  return result;                       //return result stirng) s
5 2 M
(}) s
377 466 M
(int main\(\){) s
377 458 M
(  char s[] = "000000000000000000";     //string initialization) s
377 450 M
(  char *s2;) s
377 442 M
(  int s_len;                           //string length                       ) s
377 434 M
(  int i, j, k, l , m, n;           ) s
377 426 M
(  char str[6][4] ;                     //declaration char 3 * 6) s
377 418 M
(  char buf[4];                         //declaration buffer ) s
377 410 M
(  char string[19];                     //declaration string = char 3 * 6) s
377 402 M
(  int count =1;                        //string counter initialization) s
377 394 M
(  Replace rep;) s
377 370 M
(  for\(i=0; i<6; i++\){                  //keyboard input character) s
377 362 M
(    cout <<"input string no." << i << " : "<< endl;) s
377 354 M
(    scanf\("%s",&buf[0]\);) s
377 346 M
(    str[i][0] = buf[0];) s
377 338 M
(    str[i][1] = buf[1];) s
377 330 M
(    str[i][2] = buf[2];) s
377 322 M
(  }) s
377 306 M
(  printf\("--OK! Let's go---------\\n"\);) s
377 290 M
(  for\(i=0; i<6; i++\){                   //arrary sequence) s
377 282 M
(    for\(j=0; j<6; j++\){) s
377 274 M
(      if\( i != j \){) s
377 266 M
(        for\(k=0; k<6; k++\){) s
377 258 M
(         if\( \(k != j\) && \(k != i\) \){) s
377 250 M
(           for\(l=0; l<6; l++\){) s
377 242 M
(             if\( \(l != k\) && \(l != j\) && \(l != i\) \){) s
377 234 M
(               for\(m=0; m<6; m++\){) s
377 226 M
(                 if\( \(m != l\) && \(m != k\) && \(m != j\) && \(m != i\) \){) s
377 218 M
(                   for\(n=0; n<6; n++\)) s
377 210 M
(                     if\( \(n != m\) && \(n != l\) && \(n != k\) && \(n != j\) &&\(n !=i \) \){) s
377 194 M
(                       string[0]= str[i][0];              //input value to string) s
377 186 M
(                       string[1] = str[i][1];) s
377 178 M
(                       string[2]= str[i][2];) s
377 170 M
(                       string[3] = str[j][0];) s
377 162 M
(                       string[4]= str[j][1];) s
377 154 M
(                       string[5] = str[j][2];) s
377 146 M
(                       string[6] = str[k][0];) s
377 138 M
(                       string[7] = str[k][1];) s
377 130 M
(                       string[8] = str[k][2];) s
377 122 M
(                       string[9] = str[l][0];) s
377 114 M
(                       string[10] = str[l][1];) s
377 106 M
(                       string[11] = str[l][2];) s
377 98 M
(                       string[12] = str[m][0];) s
377 90 M
(                       string[13] = str[m][1];) s
377 82 M
(                       string[14] = str[m][2];) s
377 74 M
(                       string[15] = str[n][0];) s
377 66 M
(                       string[16] = str[n][1];) s
377 58 M
(                       string[17] = str[n][2];) s
377 50 M
(                       string[18] ='\\0';) s
377 34 M
(                       cout << count << " : " << string;  //print stirng) s
377 26 M
(                       count++;                           //string counter +1) s
377 18 M
(                       strcpy\(s, string\);                 //copy string to s ) s
377 10 M
(                       s_len = strlen\(s\);                 //input string length) s
_R
S
%%Page: (2) 2
%%BeginPageSetup
_S
90 rotate
24 -574 translate
/pagenum 2 def
/fname (./PL/hw6/no1/no1.cpp) def
/fdir (./PL/hw6/no1/) def
/ftail (no1.cpp) def
% User defined strings:
/pagenumstr (2) def
/moddatestr (04/20/14) def
/modtimestr (23:17:41) def
/user_header_p false def
/user_footer_p false def
%%EndPageSetup
column_lines
do_header
5 490 M
(                       while\(s_len\){              //repeat replace untill length) s
5 482 M
(                         rep.getString\(s\);) s
5 474 M
(                         s2 = rep.putString\(\);    //replace '000.'.=>0 /'111..'=>0) s
5 466 M
(                         strcpy\(s, s2\);           //copy s2 to s) s
5 458 M
(                         s_len--;                 //stirng length -1  ) s
5 450 M
(                       }) s
5 442 M
(                         ) s
5 434 M
(                       \(s2 != NULL\) ? printf\(" result: %s\\n", s2\) : fputs\("Replace Str) s
5 426 M
(ing Error...\\n", stderr\);) s
5 418 M
(                                                  //pritnt normal stirng or print erro) s
5 410 M
(r) s
5 402 M
(                    }) s
5 394 M
(                  }) s
5 386 M
(                }) s
5 378 M
(              }) s
5 370 M
(            }) s
5 362 M
(          }) s
5 354 M
(        }) s
5 346 M
(      }) s
5 338 M
(    }) s
5 330 M
(  }) s
5 322 M
(}) s
_R
S
%%Trailer
%%Pages: 2
%%DocumentNeededResources: font Times-Roman Courier-Bold Courier 
%%+ font Times-Bold 
%%EOF
